/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lottoAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "operatorAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceEachRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "number",
        type: "uint256[]",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId_",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isPickedWinner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lottoToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId_",
        type: "uint256",
      },
    ],
    name: "myTicketOfLotteryId",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operatorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pickWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tickets",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ticketsEachRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalMyTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "winningTicket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052674563918244f400006002553480156200001d57600080fd5b5060405162001ac038038062001ac0833981810160405281019062000043919062000124565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001b3565b6000815190506200011e8162000199565b92915050565b600080604083850312156200013857600080fd5b600062000148858286016200010d565b92505060206200015b858286016200010d565b9150509250929050565b6000620001728262000179565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001a48162000165565b8114620001b057600080fd5b50565b6118fd80620001c36000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80637556e8e5116100a2578063ae169a5011610071578063ae169a50146102cf578063c2148279146102eb578063cfbd900f1461031b578063deb6263f14610339578063e580f47b146103695761010b565b80637556e8e5146102215780637fc9b636146102515780639d76ea58146102815780639e34070f1461029f5761010b565b80635c1accab116100de5780635c1accab146101ad5780635d495aea146101cb5780636fa28f64146101d5578063716cac96146102055761010b565b80631209b1f614610110578063127effb21461012e5780631703c15c1461014c57806350b447121461017c575b600080fd5b610118610387565b60405161012591906114ad565b60405180910390f35b61013661038d565b604051610143919061131a565b60405180910390f35b6101666004803603810190610161919061102e565b6103b1565b6040516101739190611395565b60405180910390f35b6101966004803603810190610191919061102e565b610459565b6040516101a492919061136c565b60405180910390f35b6101b561049d565b6040516101c291906113d2565b60405180910390f35b6101d36104c3565b005b6101ef60048036038101906101ea9190610f71565b6106d0565b6040516101fc91906114ad565b60405180910390f35b61021f600480360381019061021a9190610fc0565b61070e565b005b61023b6004803603810190610236919061102e565b610ad3565b60405161024891906114ad565b60405180910390f35b61026b60048036038101906102669190611080565b610aeb565b60405161027891906114ad565b60405180910390f35b610289610b1c565b604051610296919061131a565b60405180910390f35b6102b960048036038101906102b4919061102e565b610b42565b6040516102c691906113b7565b60405180910390f35b6102e960048036038101906102e4919061102e565b610b62565b005b6103056004803603810190610300919061102e565b610e8f565b60405161031291906113b7565b60405180910390f35b610323610eaf565b60405161033091906114ad565b60405180910390f35b610353600480360381019061034e919061102e565b610eb5565b60405161036091906114ad565b60405180910390f35b610371610ecd565b60405161037e91906114ad565b60405180910390f35b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561044d57602002820191906000526020600020905b815481526020019060010190808311610439575b50505050509050919050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610551576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105489061146d565b60405180910390fd5b600060076000600154815260200190815260200160002080549050116105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a39061148d565b60405180910390fd5b6000446007600060015481526020019081526020016000206040516020016105d59291906112f2565b6040516020818303038152906040528051906020012060001c9050600760006001548152602001908152602001600020805490508161061491906116dd565b90506007600060015481526020019081526020016000208181548110610663577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154600a60006001548152602001908152602001600020819055506001600c6000600154815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008154809291906106c89061168a565b919050555050565b600960205282600052604060002060205281600052604060002081815481106106f857600080fd5b9060005260206000200160009250925050505481565b8181905060025461071f91906115a0565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161077a919061131a565b60206040518083038186803b15801561079257600080fd5b505afa1580156107a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca9190611057565b101561080b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108029061142d565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308585905060025461085c91906115a0565b6040518463ffffffff1660e01b815260040161087a93929190611335565b602060405180830381600087803b15801561089457600080fd5b505af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190611005565b50818190506002546108de91906115a0565b6008600060015481526020019081526020016000206000828254610902919061154a565b9250508190555060005b82829050811015610ace5760405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001848484818110610977577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002013581525060066000600554815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050506007600060015481526020019081526020016000206005549080600181540180825580915050600190039060005260206000200160009091909190915055600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001548152602001908152602001600020600554908060018154018082558091505060019003906000526020600020016000909190919091505560056000815480929190610ab69061168a565b91905055508080610ac69061168a565b91505061090c565b505050565b60086020528060005260406000206000915090505481565b60076020528160005260406000208181548110610b0757600080fd5b90600052602060002001600091509150505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b6020528060005260406000206000915054906101000a900460ff1681565b60011515600c600083815260200190815260200160002060009054906101000a900460ff16151514610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc09061144d565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610c6557602002820191906000526020600020905b815481526020019060010190808311610c51575b505050505090506000805b8251811015610cec57600a600085815260200190815260200160002054838281518110610cc6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101511415610cd957600191505b8080610ce49061168a565b915050610c70565b506001151581151514610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b9061140d565b60405180910390fd5b60001515600b600085815260200190815260200160002060009054906101000a900460ff16151514610d9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d92906113ed565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360086000878152602001908152602001600020546040518363ffffffff1660e01b8152600401610e0b92919061136c565b602060405180830381600087803b158015610e2557600080fd5b505af1158015610e39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5d9190611005565b506001600b600085815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600c6020528060005260406000206000915054906101000a900460ff1681565b60055481565b600a6020528060005260406000206000915090505481565b60015481565b600081359050610ee281611882565b92915050565b60008083601f840112610efa57600080fd5b8235905067ffffffffffffffff811115610f1357600080fd5b602083019150836020820283011115610f2b57600080fd5b9250929050565b600081519050610f4181611899565b92915050565b600081359050610f56816118b0565b92915050565b600081519050610f6b816118b0565b92915050565b600080600060608486031215610f8657600080fd5b6000610f9486828701610ed3565b9350506020610fa586828701610f47565b9250506040610fb686828701610f47565b9150509250925092565b60008060208385031215610fd357600080fd5b600083013567ffffffffffffffff811115610fed57600080fd5b610ff985828601610ee8565b92509250509250929050565b60006020828403121561101757600080fd5b600061102584828501610f32565b91505092915050565b60006020828403121561104057600080fd5b600061104e84828501610f47565b91505092915050565b60006020828403121561106957600080fd5b600061107784828501610f5c565b91505092915050565b6000806040838503121561109357600080fd5b60006110a185828601610f47565b92505060206110b285828601610f47565b9150509250929050565b60006110c883836112ae565b60208301905092915050565b60006110e083836112cc565b60208301905092915050565b6110f581611604565b82525050565b6000611106826114ed565b611110818561151d565b935061111b836114c8565b8060005b8381101561114c57815161113388826110bc565b975061113e83611503565b92505060018101905061111f565b5085935050505092915050565b6000611164826114f8565b61116e818561152e565b9350611179836114d8565b8060005b838110156111b15761118e8261176c565b61119888826110d4565b97506111a383611510565b92505060018101905061117d565b5085935050505092915050565b6111c781611616565b82525050565b6111d68161164c565b82525050565b60006111e9601183611539565b91506111f48261178c565b602082019050919050565b600061120c600b83611539565b9150611217826117b5565b602082019050919050565b600061122f601283611539565b915061123a826117de565b602082019050919050565b6000611252601483611539565b915061125d82611807565b602082019050919050565b6000611275600c83611539565b915061128082611830565b602082019050919050565b6000611298600a83611539565b91506112a382611859565b602082019050919050565b6112b781611642565b82525050565b6112c681611642565b82525050565b6112d581611642565b82525050565b6112ec6112e782611642565b6116d3565b82525050565b60006112fe82856112db565b60208201915061130e8284611159565b91508190509392505050565b600060208201905061132f60008301846110ec565b92915050565b600060608201905061134a60008301866110ec565b61135760208301856110ec565b61136460408301846112bd565b949350505050565b600060408201905061138160008301856110ec565b61138e60208301846112bd565b9392505050565b600060208201905081810360008301526113af81846110fb565b905092915050565b60006020820190506113cc60008301846111be565b92915050565b60006020820190506113e760008301846111cd565b92915050565b60006020820190508181036000830152611406816111dc565b9050919050565b60006020820190508181036000830152611426816111ff565b9050919050565b6000602082019050818103600083015261144681611222565b9050919050565b6000602082019050818103600083015261146681611245565b9050919050565b6000602082019050818103600083015261148681611268565b9050919050565b600060208201905081810360008301526114a68161128b565b9050919050565b60006020820190506114c260008301846112bd565b92915050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081549050919050565b6000602082019050919050565b6000600182019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061155582611642565b915061156083611642565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115955761159461170e565b5b828201905092915050565b60006115ab82611642565b91506115b683611642565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115ef576115ee61170e565b5b828202905092915050565b6000819050919050565b600061160f82611622565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116578261165e565b9050919050565b600061166982611622565b9050919050565b600061168361167e8361177f565b6115fa565b9050919050565b600061169582611642565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116c8576116c761170e565b5b600182019050919050565b6000819050919050565b60006116e882611642565b91506116f383611642565b9250826117035761170261173d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117788254611670565b9050919050565b60008160001c9050919050565b7f52657761726420697320636c61696d6564000000000000000000000000000000600082015250565b7f596f75206e6f742077696e000000000000000000000000000000000000000000600082015250565b7f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000600082015250565b7f57696e6e65722069736e277420706965636b6564000000000000000000000000600082015250565b7f4e6f74206f70657261746f720000000000000000000000000000000000000000600082015250565b7f4e6f20706c617965727300000000000000000000000000000000000000000000600082015250565b61188b81611604565b811461189657600080fd5b50565b6118a281611616565b81146118ad57600080fd5b50565b6118b981611642565b81146118c457600080fd5b5056fea26469706673582212200f94c976ea09acb9491a29da987ab42f0622a0200f975e0f83338ac75faaf5b764736f6c63430008040033";

export class Lottery__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    lottoAddress_: string,
    operatorAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(
      lottoAddress_,
      operatorAddress_,
      overrides || {}
    ) as Promise<Lottery>;
  }
  getDeployTransaction(
    lottoAddress_: string,
    operatorAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      lottoAddress_,
      operatorAddress_,
      overrides || {}
    );
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
